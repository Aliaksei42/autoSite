{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Button from '../Button/Button';\nimport Post from '../Post/Post';\nimport TopPost from '../TopPost/TopPost';\nimport SidebarPosts from '../SidebarPosts/SidebarPosts';\nimport topPosts from '../../data/topPosts';\nimport sidebarPosts from '../../data/sidebarPosts';\nimport styles from './Posts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  category\n}) => {\n  _s();\n  const [allPosts, setAllPosts] = useState([]);\n  // Используем состояние для отслеживания количества видимых постов\n  const [visiblePosts, setVisiblePosts] = useState(4); // Начинаем с отображения 4 постов\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        // Измените URL на ваш API на сервере\n        const response = await axios.get('http://localhost:3002/posts');\n        const filteredPosts = category ? response.data.filter(post => post.category === category) : response.data;\n        setAllPosts(filteredPosts);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, [category]);\n\n  // Обработчик для отображения большего количества постов\n  const handleShowMore = () => {\n    setVisiblePosts(prevVisiblePosts => prevVisiblePosts + 4); // Увеличиваем количество отображаемых постов на 2\n  };\n\n  return (\n    /*#__PURE__*/\n    // Общий контейнер для постов\n    _jsxDEV(\"div\", {\n      className: styles.postsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postsRow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postsLeft,\n          children: [/*#__PURE__*/_jsxDEV(TopPost, {\n            topPost: topPosts[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.posts,\n            children: allPosts.slice(0, visiblePosts).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.posts,\n              children: /*#__PURE__*/_jsxDEV(Post, {\n                post: post\n              }, post.slug, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, post.slug, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postsRight,\n          children: /*#__PURE__*/_jsxDEV(SidebarPosts, {\n            sidebarPosts: sidebarPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), visiblePosts < allPosts.length && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleShowMore,\n        children: \"Show more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Posts, \"V8ylGMHSgTuRyG2Xlu1zPPf88iA=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","axios","Button","Post","TopPost","SidebarPosts","topPosts","sidebarPosts","styles","jsxDEV","_jsxDEV","Posts","category","_s","allPosts","setAllPosts","visiblePosts","setVisiblePosts","fetchPosts","response","get","filteredPosts","data","filter","post","error","console","handleShowMore","prevVisiblePosts","className","postsContainer","children","postsRow","postsLeft","topPost","fileName","_jsxFileName","lineNumber","columnNumber","posts","slice","map","slug","postsRight","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport Button from '../Button/Button'\r\nimport Post from '../Post/Post'\r\nimport TopPost from '../TopPost/TopPost'\r\nimport SidebarPosts from '../SidebarPosts/SidebarPosts'\r\n\r\n\r\nimport topPosts from '../../data/topPosts'\r\nimport sidebarPosts from '../../data/sidebarPosts'\r\nimport styles from './Posts.module.css'\r\n\r\nconst Posts = ({ category }) => {\r\n  const [allPosts, setAllPosts] = useState([]);\r\n  // Используем состояние для отслеживания количества видимых постов\r\n  const [visiblePosts, setVisiblePosts] = useState(4) // Начинаем с отображения 4 постов\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        // Измените URL на ваш API на сервере\r\n        const response = await axios.get('http://localhost:3002/posts');\r\n        const filteredPosts = category\r\n          ? response.data.filter(post => post.category === category)\r\n          : response.data;\r\n\r\n        setAllPosts(filteredPosts);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, [category]);\r\n\r\n  // Обработчик для отображения большего количества постов\r\n  const handleShowMore = () => {\r\n    setVisiblePosts((prevVisiblePosts) => prevVisiblePosts + 4) // Увеличиваем количество отображаемых постов на 2\r\n  }\r\n\r\n  return (\r\n    // Общий контейнер для постов\r\n    <div className={styles.postsContainer}>\r\n      <div className={styles.postsRow}>\r\n        <div className={styles.postsLeft}>\r\n          {/* Рендерим TopPost перед маппингом постов */}\r\n          <TopPost topPost={topPosts[0]} />\r\n\r\n          <div className={styles.posts}>\r\n            {/* Маппим массив постов для их отображения */}\r\n            {allPosts.slice(0, visiblePosts).map((post) => (\r\n              <div key={post.slug} className={styles.posts}>\r\n                {/* Передаем компоненту Post информацию о посте */}\r\n                <Post key={post.slug} post={post} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={styles.postsRight}>\r\n          {/* Вместо передачи всех постов передаем только отфильтрованные */}\r\n          <SidebarPosts sidebarPosts={sidebarPosts} />\r\n        </div>\r\n      </div>\r\n      {/* Показываем кнопку \"Показать ещё\", если есть ещё посты для отображения */}\r\n      {visiblePosts < allPosts.length && (\r\n        <Button onClick={handleShowMore}>Show more</Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}