{"ast":null,"code":"import Post from '../Post/Post';\nimport styles from './FilteredPosts.module.css';\nconst FilteredPosts = (allPosts, searchText) => {\n  return allPosts.filter(post => {\n    // Проверяем, что объект post и его свойство date существуют\n    if (post && post.date) {\n      const searchLower = searchText.toLowerCase();\n      const postDateLower = post.date.toLowerCase();\n      return post.title.toLowerCase().includes(searchLower) || post.text.toLowerCase().includes(searchLower) || postDateLower.includes(searchLower) || postDateLower.replace(/[^\\w\\s]/gi, '').includes(searchLower);\n    } else {\n      return false; // Если объект post или его свойство date отсутствует, исключаем такой пост из результатов\n    }\n  });\n};\n_c = FilteredPosts;\nexport default FilteredPosts;\nvar _c;\n$RefreshReg$(_c, \"FilteredPosts\");","map":{"version":3,"names":["Post","styles","FilteredPosts","allPosts","searchText","filter","post","date","searchLower","toLowerCase","postDateLower","title","includes","text","replace","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/FilteredPosts/FilteredPosts.jsx"],"sourcesContent":["import Post from '../Post/Post';\r\nimport styles from './FilteredPosts.module.css';\r\n\r\nconst FilteredPosts = (allPosts, searchText) => {\r\n  return allPosts.filter((post) => {\r\n    // Проверяем, что объект post и его свойство date существуют\r\n    if (post && post.date) {\r\n      const searchLower = searchText.toLowerCase();\r\n      const postDateLower = post.date.toLowerCase();\r\n\r\n      return (\r\n        post.title.toLowerCase().includes(searchLower) ||\r\n        post.text.toLowerCase().includes(searchLower) ||\r\n        postDateLower.includes(searchLower) ||\r\n        postDateLower.replace(/[^\\w\\s]/gi, '').includes(searchLower)\r\n      );\r\n    } else {\r\n      return false; // Если объект post или его свойство date отсутствует, исключаем такой пост из результатов\r\n    }\r\n  });\r\n};\r\n\r\nexport default FilteredPosts;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,4BAA4B;AAE/C,MAAMC,aAAa,GAAGA,CAACC,QAAQ,EAAEC,UAAU,KAAK;EAC9C,OAAOD,QAAQ,CAACE,MAAM,CAAEC,IAAI,IAAK;IAC/B;IACA,IAAIA,IAAI,IAAIA,IAAI,CAACC,IAAI,EAAE;MACrB,MAAMC,WAAW,GAAGJ,UAAU,CAACK,WAAW,CAAC,CAAC;MAC5C,MAAMC,aAAa,GAAGJ,IAAI,CAACC,IAAI,CAACE,WAAW,CAAC,CAAC;MAE7C,OACEH,IAAI,CAACK,KAAK,CAACF,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,WAAW,CAAC,IAC9CF,IAAI,CAACO,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACJ,WAAW,CAAC,IAC7CE,aAAa,CAACE,QAAQ,CAACJ,WAAW,CAAC,IACnCE,aAAa,CAACI,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAACF,QAAQ,CAACJ,WAAW,CAAC;IAEhE,CAAC,MAAM;MACL,OAAO,KAAK,CAAC,CAAC;IAChB;EACF,CAAC,CAAC;AACJ,CAAC;AAACO,EAAA,GAjBIb,aAAa;AAmBnB,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}