{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Post\\\\Post.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotFound from '../components/NotFound/NotFound';\nimport styles from './Post.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post,\n  showFullText,\n  isSinglePost\n}) => {\n  // Если пост не передан, отображаем ссылку на страницу NotFound\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Деструктуризация свойств поста\n  const {\n    id,\n    title,\n    img,\n    text\n  } = post;\n\n  // Определяем, нужно ли отобразить полный текст поста или его сокращенную версию\n  const displayedText = showFullText ? text : text.slice(0, 100) + '...';\n\n  // Используем литералы шаблонов для создания уникального URL поста\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postContainer,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${post.id}-${post.title.replace(/\\s+/g, '-')}`,\n      className: styles.postLink,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.postImage,\n        src: img,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.postTitle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isSinglePost ? styles.postContentFull : styles.postContent,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.postText,\n          children: displayedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","Link","NotFound","styles","jsxDEV","_jsxDEV","Post","post","showFullText","isSinglePost","fileName","_jsxFileName","lineNumber","columnNumber","id","title","img","text","displayedText","slice","className","postContainer","children","to","replace","postLink","postImage","src","alt","postTitle","postContentFull","postContent","postText","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Post/Post.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NotFound from '../components/NotFound/NotFound'\r\nimport styles from './Post.module.css'\r\n\r\nconst Post = ({ post, showFullText, isSinglePost }) => {\r\n  // Если пост не передан, отображаем ссылку на страницу NotFound\r\n  if (!post) {\r\n    return <NotFound />;\r\n  \r\n  }\r\n\r\n  // Деструктуризация свойств поста\r\n  const { id, title, img, text } = post\r\n\r\n  // Определяем, нужно ли отобразить полный текст поста или его сокращенную версию\r\n  const displayedText = showFullText ? text : text.slice(0, 100) + '...'\r\n\r\n  // Используем литералы шаблонов для создания уникального URL поста\r\n  return (\r\n    <div className={styles.postContainer}>\r\n      {/* Ссылка на страницу с подробной информацией о посте */}\r\n      <Link to={`/posts/${post.id}-${post.title.replace(/\\s+/g, '-')}`} className={styles.postLink}>\r\n        <img className={styles.postImage} src={img} alt={title} />\r\n        <h3 className={styles.postTitle}>{title}</h3>\r\n        <div className={isSinglePost ? styles.postContentFull : styles.postContent}>\r\n          <p className={styles.postText}>{displayedText}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC;AAAa,CAAC,KAAK;EACrD;EACA,IAAI,CAACF,IAAI,EAAE;IACT,oBAAOF,OAAA,CAACH,QAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAErB;;EAEA;EACA,MAAM;IAAEC,EAAE;IAAEC,KAAK;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGV,IAAI;;EAErC;EACA,MAAMW,aAAa,GAAGV,YAAY,GAAGS,IAAI,GAAGA,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK;;EAEtE;EACA,oBACEd,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACkB,aAAc;IAAAC,QAAA,eAEnCjB,OAAA,CAACJ,IAAI;MAACsB,EAAE,EAAG,UAAShB,IAAI,CAACO,EAAG,IAAGP,IAAI,CAACQ,KAAK,CAACS,OAAO,CAAC,MAAM,EAAE,GAAG,CAAE,EAAE;MAACJ,SAAS,EAAEjB,MAAM,CAACsB,QAAS;MAAAH,QAAA,gBAC3FjB,OAAA;QAAKe,SAAS,EAAEjB,MAAM,CAACuB,SAAU;QAACC,GAAG,EAAEX,GAAI;QAACY,GAAG,EAAEb;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DR,OAAA;QAAIe,SAAS,EAAEjB,MAAM,CAAC0B,SAAU;QAAAP,QAAA,EAAEP;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7CR,OAAA;QAAKe,SAAS,EAAEX,YAAY,GAAGN,MAAM,CAAC2B,eAAe,GAAG3B,MAAM,CAAC4B,WAAY;QAAAT,QAAA,eACzEjB,OAAA;UAAGe,SAAS,EAAEjB,MAAM,CAAC6B,QAAS;UAAAV,QAAA,EAAEJ;QAAa;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAoB,EAAA,GA1BK3B,IAAI;AA4BV,eAAeA,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}