{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Input\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport styles from './Input.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  onSearch,\n  updateFilteredPosts,\n  posts\n}) => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const handleInputChange = e => {\n    setSearchText(e.target.value);\n  };\n  const handleSearch = () => {\n    console.log('Запущен поиск');\n    const filteredPosts = posts.filter(post => post.title.includes(searchText));\n    console.log('Отфильтрованные посты:', filteredPosts);\n    // Обновите состояние в родительском компоненте\n    updateFilteredPosts(filteredPosts);\n    setSearchText('');\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      console.log('Сработал Enter на Input');\n      handleSearch();\n    }\n  };\n\n  // Функция для фильтрации постов и вывода в консоль\n  const filterAndLogPosts = () => {\n    const filteredPosts = posts.filter(post => post.title.includes(searchText));\n    console.log('Отфильтрованные посты:', filterAndLogPosts);\n    console.log('Отфильтрованные посты:', filteredPosts);\n    console.log('Отфильтрованные посты:', filteredPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inputWithButton,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Wpisz tekst do wyszukania\",\n      value: searchText,\n      onChange: handleInputChange,\n      onKeyPress: handleKeyPress // Добавляем обработчик нажатия клавиши\n      ,\n      className: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/search`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleSearch();\n          filterAndLogPosts();\n        },\n        className: styles.inputButton,\n        children: \"Szukaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"lpZkT7pWeo+MC0liMHDzSFPwEJc=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Link","useState","styles","jsxDEV","_jsxDEV","Input","onSearch","updateFilteredPosts","posts","_s","searchText","setSearchText","handleInputChange","e","target","value","handleSearch","console","log","filteredPosts","filter","post","title","includes","handleKeyPress","key","filterAndLogPosts","className","inputWithButton","children","type","placeholder","onChange","onKeyPress","input","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","inputButton","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Input/Input.jsx"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport styles from './Input.module.css'\r\n\r\nconst Input = ({ onSearch, updateFilteredPosts, posts }) => {\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setSearchText(e.target.value)\r\n  }\r\n\r\n  const handleSearch = () => {\r\n    console.log('Запущен поиск');\r\n    const filteredPosts = posts.filter(post => post.title.includes(searchText));\r\n    console.log('Отфильтрованные посты:', filteredPosts);\r\n    // Обновите состояние в родительском компоненте\r\n    updateFilteredPosts(filteredPosts);\r\n    setSearchText('');\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      console.log('Сработал Enter на Input')\r\n      handleSearch()\r\n    }\r\n  }\r\n\r\n  // Функция для фильтрации постов и вывода в консоль\r\n  const filterAndLogPosts = () => {\r\n    const filteredPosts = posts.filter(post => post.title.includes(searchText));\r\n    console.log('Отфильтрованные посты:', filterAndLogPosts);\r\n    console.log('Отфильтрованные посты:', filteredPosts);\r\n    console.log('Отфильтрованные посты:', filteredPosts);\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className={styles.inputWithButton}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Wpisz tekst do wyszukania\"\r\n        value={searchText}\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleKeyPress} // Добавляем обработчик нажатия клавиши\r\n        className={styles.input}\r\n      />\r\n      <Link to={`/search`}>\r\n      <button onClick={() => { handleSearch(); filterAndLogPosts(); }} className={styles.inputButton}>\r\n          Szukaj\r\n        </button>\r\n        \r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,mBAAmB;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,MAAMC,aAAa,GAAGX,KAAK,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACb,UAAU,CAAC,CAAC;IAC3EO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,aAAa,CAAC;IACpD;IACAZ,mBAAmB,CAACY,aAAa,CAAC;IAClCR,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMa,cAAc,GAAIX,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACY,GAAG,KAAK,OAAO,EAAE;MACrBR,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCF,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;;EAED;EACA,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMP,aAAa,GAAGX,KAAK,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,QAAQ,CAACb,UAAU,CAAC,CAAC;IAC3EO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEQ,iBAAiB,CAAC;IACxDT,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,aAAa,CAAC;IACpDF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,aAAa,CAAC;EACtD,CAAC;EAGD,oBACEf,OAAA;IAAKuB,SAAS,EAAEzB,MAAM,CAAC0B,eAAgB;IAAAC,QAAA,gBACrCzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,2BAA2B;MACvChB,KAAK,EAAEL,UAAW;MAClBsB,QAAQ,EAAEpB,iBAAkB;MAC5BqB,UAAU,EAAET,cAAe,CAAC;MAAA;MAC5BG,SAAS,EAAEzB,MAAM,CAACgC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFlC,OAAA,CAACJ,IAAI;MAACuC,EAAE,EAAG,SAAS;MAAAV,QAAA,eACpBzB,OAAA;QAAQoC,OAAO,EAAEA,CAAA,KAAM;UAAExB,YAAY,CAAC,CAAC;UAAEU,iBAAiB,CAAC,CAAC;QAAE,CAAE;QAACC,SAAS,EAAEzB,MAAM,CAACuC,WAAY;QAAAZ,QAAA,EAAC;MAE9F;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAA7B,EAAA,CAlDKJ,KAAK;AAAAqC,EAAA,GAALrC,KAAK;AAoDX,eAAeA,KAAK;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}