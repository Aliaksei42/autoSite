{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport Post from '../Post/Post';\nimport TopPost from '../TopPost/TopPost';\nimport SidebarPosts from '../SidebarPosts/SidebarPosts';\nimport topPosts from '../../data/topPosts';\nimport posts from '../../data/posts';\nimport sidebarPosts from '../../data/sidebarPosts';\nimport styles from './Posts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  // Используем состояние для отслеживания количества видимых постов\n  const [visiblePosts, setVisiblePosts] = useState(4); // Начинаем с отображения 4 постов\n\n  // Обработчик для отображения большего количества постов\n  const handleShowMore = () => {\n    setVisiblePosts(prevVisiblePosts => prevVisiblePosts + 4); // Увеличиваем количество отображаемых постов на 2\n  };\n\n  return (\n    /*#__PURE__*/\n    // Общий контейнер для постов\n    _jsxDEV(\"div\", {\n      className: styles.postsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postsRow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postsLeft,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.posts,\n            children: posts.slice(0, visiblePosts).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.posts,\n              children: /*#__PURE__*/_jsxDEV(Post, {\n                post: post\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postsRight,\n          children: /*#__PURE__*/_jsxDEV(SidebarPosts, {\n            sidebarPosts: sidebarPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), visiblePosts < posts.length && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleShowMore,\n        children: \"Show more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Posts, \"MzwM2+K3VvZtOFauUzX7jCRlEdM=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","Button","Post","TopPost","SidebarPosts","topPosts","posts","sidebarPosts","styles","jsxDEV","_jsxDEV","Posts","_s","visiblePosts","setVisiblePosts","handleShowMore","prevVisiblePosts","className","postsContainer","children","postsRow","postsLeft","slice","map","post","fileName","_jsxFileName","lineNumber","columnNumber","id","postsRight","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Button from '../Button/Button'\r\nimport Post from '../Post/Post'\r\nimport TopPost from '../TopPost/TopPost'\r\nimport SidebarPosts from '../SidebarPosts/SidebarPosts'\r\n\r\n\r\nimport topPosts from '../../data/topPosts'\r\nimport posts from '../../data/posts'\r\nimport sidebarPosts from '../../data/sidebarPosts'\r\n\r\nimport styles from './Posts.module.css'\r\n\r\nconst Posts = () => {\r\n  // Используем состояние для отслеживания количества видимых постов\r\n  const [visiblePosts, setVisiblePosts] = useState(4) // Начинаем с отображения 4 постов\r\n  \r\n\r\n  // Обработчик для отображения большего количества постов\r\n  const handleShowMore = () => {\r\n    setVisiblePosts((prevVisiblePosts) => prevVisiblePosts + 4) // Увеличиваем количество отображаемых постов на 2\r\n  }\r\n\r\n  return (\r\n    // Общий контейнер для постов\r\n    <div className={styles.postsContainer}>\r\n      <div className={styles.postsRow}>\r\n        <div className={styles.postsLeft}>\r\n          {/* Рендерим TopPost перед маппингом постов */}\r\n          {/* <TopPost topPost={topPosts[0]} /> */}\r\n\r\n          <div className={styles.posts}>\r\n            {/* Маппим массив постов для их отображения */}\r\n            {posts.slice(0, visiblePosts).map((post) => (\r\n              <div key={post.id} className={styles.posts}>\r\n                {/* Передаем компоненту Post информацию о посте */}\r\n                <Post post={post} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={styles.postsRight}>\r\n          {/* Вместо передачи всех постов передаем только отфильтрованные */}\r\n          <SidebarPosts sidebarPosts={sidebarPosts} />\r\n        </div>\r\n      </div>\r\n      {/* Показываем кнопку \"Показать ещё\", если есть ещё посты для отображения */}\r\n      {visiblePosts < posts.length && (\r\n        <Button onClick={handleShowMore}>Show more</Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AAGvD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,YAAY,MAAM,yBAAyB;AAElD,OAAOC,MAAM,MAAM,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,EAAC;;EAGpD;EACA,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3BD,eAAe,CAAEE,gBAAgB,IAAKA,gBAAgB,GAAG,CAAC,CAAC,EAAC;EAC9D,CAAC;;EAED;IAAA;IACE;IACAN,OAAA;MAAKO,SAAS,EAAET,MAAM,CAACU,cAAe;MAAAC,QAAA,gBACpCT,OAAA;QAAKO,SAAS,EAAET,MAAM,CAACY,QAAS;QAAAD,QAAA,gBAC9BT,OAAA;UAAKO,SAAS,EAAET,MAAM,CAACa,SAAU;UAAAF,QAAA,eAI/BT,OAAA;YAAKO,SAAS,EAAET,MAAM,CAACF,KAAM;YAAAa,QAAA,EAE1Bb,KAAK,CAACgB,KAAK,CAAC,CAAC,EAAET,YAAY,CAAC,CAACU,GAAG,CAAEC,IAAI,iBACrCd,OAAA;cAAmBO,SAAS,EAAET,MAAM,CAACF,KAAM;cAAAa,QAAA,eAEzCT,OAAA,CAACR,IAAI;gBAACsB,IAAI,EAAEA;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC,GAFZJ,IAAI,CAACK,EAAE;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGZ,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNlB,OAAA;UAAKO,SAAS,EAAET,MAAM,CAACsB,UAAW;UAAAX,QAAA,eAEhCT,OAAA,CAACN,YAAY;YAACG,YAAY,EAAEA;UAAa;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAELf,YAAY,GAAGP,KAAK,CAACyB,MAAM,iBAC1BrB,OAAA,CAACT,MAAM;QAAC+B,OAAO,EAAEjB,cAAe;QAAAI,QAAA,EAAC;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACnD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;AAEV,CAAC;AAAAhB,EAAA,CAvCKD,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAyCX,eAAeA,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}