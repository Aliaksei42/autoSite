{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Input\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport styles from './Input.module.css';\nimport posts from '../../data/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = ({}) => {\n  _s();\n  const [searchValue, setSearhValue] = useState('');\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      console.log('Сработал Enter на Input');\n    }\n  };\n  const onChangeSearchInnput = event => {\n    console.log(event.target.value);\n    setSearhValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inputWithButton,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Wpisz tekst do wyszukania\",\n        value: searchValue,\n        onChange: onChangeSearchInnput,\n        onKeyPress: handleKeyPress // Добавляем обработчик нажатия клавиши\n        ,\n        className: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/search`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {},\n          className: styles.inputButton,\n          children: \"Szukaj\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: searchValue ? `Поиск по запросу: \"${searchValue}\"` : 'все посты'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Input, \"3hlLQ2wCS52l+I5dwz7rwp5hIzk=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Link","useState","styles","posts","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","_s","searchValue","setSearhValue","handleKeyPress","e","key","console","log","onChangeSearchInnput","event","target","value","children","className","inputWithButton","type","placeholder","onChange","onKeyPress","input","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","inputButton","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Input/Input.jsx"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport styles from './Input.module.css'\r\nimport posts from '../../data/posts'\r\n\r\nconst Input = ({  }) => {\r\n  \r\n  const [searchValue, setSearhValue] = useState('')\r\n  \r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      console.log('Сработал Enter на Input')\r\n    }\r\n  }\r\n\r\n  const onChangeSearchInnput = (event) => {\r\n    console.log(event.target.value)\r\n    setSearhValue(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className={styles.inputWithButton}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Wpisz tekst do wyszukania\"\r\n        value={searchValue}\r\n        onChange={onChangeSearchInnput}\r\n        onKeyPress={handleKeyPress} // Добавляем обработчик нажатия клавиши\r\n        className={styles.input}\r\n      />\r\n      <Link to={`/search`}>\r\n        <button onClick={() => {}} className={styles.inputButton}>\r\n          Szukaj\r\n        </button>\r\n      </Link>\r\n    </div>\r\n    <h1>{searchValue ? `Поиск по запросу: \"${searchValue}\"` : 'все посты'}</h1>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Input\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,KAAK,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,KAAK,GAAGA,CAAC,CAAG,CAAC,KAAK;EAAAC,EAAA;EAEtB,MAAM,CAACC,WAAW,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEjD,MAAMW,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACtCH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/BT,aAAa,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACAhB,OAAA;MAAKiB,SAAS,EAAEpB,MAAM,CAACqB,eAAgB;MAAAF,QAAA,gBACrChB,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,2BAA2B;QACvCL,KAAK,EAAEV,WAAY;QACnBgB,QAAQ,EAAET,oBAAqB;QAC/BU,UAAU,EAAEf,cAAe,CAAC;QAAA;QAC5BU,SAAS,EAAEpB,MAAM,CAAC0B;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACF3B,OAAA,CAACL,IAAI;QAACiC,EAAE,EAAG,SAAS;QAAAZ,QAAA,eAClBhB,OAAA;UAAQ6B,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;UAACZ,SAAS,EAAEpB,MAAM,CAACiC,WAAY;UAAAd,QAAA,EAAC;QAE1D;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACN3B,OAAA;MAAAgB,QAAA,EAAKX,WAAW,GAAI,sBAAqBA,WAAY,GAAE,GAAG;IAAW;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eACzE,CAAC;AAEP,CAAC;AAAAvB,EAAA,CAnCKD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAqCX,eAAeA,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}