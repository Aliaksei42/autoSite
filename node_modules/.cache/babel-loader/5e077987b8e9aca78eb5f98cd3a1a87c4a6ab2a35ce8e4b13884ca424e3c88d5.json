{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\pages\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './SearchPage.module.css';\nimport Post from '../components/Post/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  // Состояния компонента\n  const [searchPage, setsearchPage] = useState(pos); // Состояние для хранения всех постов\n  const [searchTerm, setSearchTerm] = useState(''); // Состояние для хранения строки поиска\n  const [searchResults, setSearchResults] = useState([]); // Состояние для хранения отфильтрованных результатов поиска\n\n  // Эффект, выполняющийся при изменении searchTerm или searchPage\n  useEffect(() => {\n    // Функция для сортировки постов по дате\n    const sortByDate = (a, b) => new Date(b.date) - new Date(a.date);\n\n    // Фильтрация постов, если searchTerm не пустой\n    const filteredsearchPage = searchTerm ? searchPage.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    // Поиск в заголовке\n    post.text.toLowerCase().includes(searchTerm.toLowerCase()) // Поиск в тексте\n    ).sort(sortByDate) // Сортировка отфильтрованных постов по дате\n    : [];\n\n    // Обновление состояния searchResults\n    setSearchResults(filteredsearchPage);\n  }, [searchTerm, searchPage]); // Зависимости эффекта - searchTerm и searchPage\n\n  // Обработчик изменения строки поиска\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.searchContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchRow,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.searchLeft,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0412\\u0441\\u0435 \\u043F\\u043E\\u0441\\u0442\\u044B - \\u0437\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputWithButton,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Wpisz tekst do wyszukania\",\n            value: searchTerm,\n            onChange: handleSearchChange,\n            className: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.inputButton,\n            children: \"Szukaj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: searchResults.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.search,\n            children: /*#__PURE__*/_jsxDEV(Post, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"2OZhPMx1CIUVtpXuK2EJBDSFPdY=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","styles","Post","jsxDEV","_jsxDEV","SearchPage","_s","searchPage","setsearchPage","pos","searchTerm","setSearchTerm","searchResults","setSearchResults","sortByDate","a","b","Date","date","filteredsearchPage","filter","post","title","toLowerCase","includes","text","sort","handleSearchChange","event","target","value","className","searchContainer","children","searchRow","searchLeft","fileName","_jsxFileName","lineNumber","columnNumber","inputWithButton","type","placeholder","onChange","input","inputButton","map","search","id","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/pages/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport styles from './SearchPage.module.css';\r\nimport Post from '../components/Post/Post';\r\n\r\nconst SearchPage = () => {\r\n  // Состояния компонента\r\n  const [searchPage, setsearchPage] = useState(pos); // Состояние для хранения всех постов\r\n  const [searchTerm, setSearchTerm] = useState(''); // Состояние для хранения строки поиска\r\n  const [searchResults, setSearchResults] = useState([]); // Состояние для хранения отфильтрованных результатов поиска\r\n\r\n  // Эффект, выполняющийся при изменении searchTerm или searchPage\r\n  useEffect(() => {\r\n    // Функция для сортировки постов по дате\r\n    const sortByDate = (a, b) => new Date(b.date) - new Date(a.date);\r\n\r\n    // Фильтрация постов, если searchTerm не пустой\r\n    const filteredsearchPage = searchTerm\r\n      ? searchPage\r\n          .filter(\r\n            (post) =>\r\n              post.title.toLowerCase().includes(searchTerm.toLowerCase()) || // Поиск в заголовке\r\n              post.text.toLowerCase().includes(searchTerm.toLowerCase())   // Поиск в тексте\r\n          )\r\n          .sort(sortByDate) // Сортировка отфильтрованных постов по дате\r\n      : [];\r\n\r\n    // Обновление состояния searchResults\r\n    setSearchResults(filteredsearchPage);\r\n  }, [searchTerm, searchPage]); // Зависимости эффекта - searchTerm и searchPage\r\n\r\n  // Обработчик изменения строки поиска\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.searchContainer}>\r\n    <div className={styles.searchRow}>\r\n      <div className={styles.searchLeft}>\r\n      {/* Заголовок страницы */}\r\n      <h1>Все посты - за все времена</h1>\r\n\r\n      {/* Ввод текста для поиска с кнопкой */}\r\n      <div className={styles.inputWithButton}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Wpisz tekst do wyszukania\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className={styles.input}\r\n        />\r\n        <button className={styles.inputButton}>\r\n          Szukaj\r\n        </button>\r\n      </div>\r\n\r\n      {/* Вывод результатов поиска, если searchTerm не пустой */}\r\n      {searchTerm && (\r\n        <ul>\r\n          {/* Маппинг отфильтрованных постов для вывода */}\r\n          {searchResults.map((post) => (\r\n              <div key={post.id} className={styles.search}>\r\n              {/* Передаем компоненту Post информацию о посте */}\r\n              <Post post={post} />\r\n            </div>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}