{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\pages\\\\PostPage.jsx\",\n  _s = $RefreshSig$();\n// PostPage.js\n// Импортируем React и необходимые компоненты\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport posts from '../data/posts'; // Предполагается, что у вас есть файл с данными постов\nimport Post from '../components/Post/Post'; // Предполагается, что у вас есть компонент Post\nimport NotFound from '../components/NotFound/NotFound'; // Предполагается, что у вас есть компонент NotFound\nimport styles from './PostPage.module.css'; // Импортируем стили для компонента PostPage\n\n// Компонент PostPage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  // Используем хук useParams для получения параметра из URL\n  const {\n    postId\n  } = useParams();\n\n  // Найдем пост с помощью идентификатора postId\n  const post = posts.find(p => p.id === parseInt(postId, 10));\n\n  // Если пост не найден, отобразим страницу NotFound\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Возвращаем компонент поста, передавая информацию о посте и флаг isSinglePost\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postPage,\n    children: /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      showFullText: true,\n      isSinglePost: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n// Экспортируем компонент PostPage\n_s(PostPage, \"zY00sTkH8LAD3YdIJE1pP6vQWzg=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["React","useParams","posts","Post","NotFound","styles","jsxDEV","_jsxDEV","PostPage","_s","postId","post","find","p","id","parseInt","fileName","_jsxFileName","lineNumber","columnNumber","className","postPage","children","showFullText","isSinglePost","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/pages/PostPage.jsx"],"sourcesContent":["// PostPage.js\r\n// Импортируем React и необходимые компоненты\r\nimport React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport posts from '../data/posts'; // Предполагается, что у вас есть файл с данными постов\r\nimport Post from '../components/Post/Post'; // Предполагается, что у вас есть компонент Post\r\nimport NotFound from '../components/NotFound/NotFound'; // Предполагается, что у вас есть компонент NotFound\r\nimport styles from './PostPage.module.css'; // Импортируем стили для компонента PostPage\r\n\r\n// Компонент PostPage\r\nconst PostPage = () => {\r\n  // Используем хук useParams для получения параметра из URL\r\n  const { postId } = useParams();\r\n\r\n  // Найдем пост с помощью идентификатора postId\r\n  const post = posts.find((p) => p.id === parseInt(postId, 10));\r\n\r\n  // Если пост не найден, отобразим страницу NotFound\r\n  if (!post) {\r\n    return <NotFound />;\r\n  }\r\n\r\n  // Возвращаем компонент поста, передавая информацию о посте и флаг isSinglePost\r\n  return (\r\n    <div className={styles.postPage}>\r\n      {/* Передаем isSinglePost как true, так как мы находимся на странице одного поста */}\r\n      <Post post={post} showFullText={true} isSinglePost={true} />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Экспортируем компонент PostPage\r\nexport default PostPage;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,eAAe,CAAC,CAAC;AACnC,OAAOC,IAAI,MAAM,yBAAyB,CAAC,CAAC;AAC5C,OAAOC,QAAQ,MAAM,iCAAiC,CAAC,CAAC;AACxD,OAAOC,MAAM,MAAM,uBAAuB,CAAC,CAAC;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM;IAAEC;EAAO,CAAC,GAAGT,SAAS,CAAC,CAAC;;EAE9B;EACA,MAAMU,IAAI,GAAGT,KAAK,CAACU,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACL,MAAM,EAAE,EAAE,CAAC,CAAC;;EAE7D;EACA,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOJ,OAAA,CAACH,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB;;EAEA;EACA,oBACEZ,OAAA;IAAKa,SAAS,EAAEf,MAAM,CAACgB,QAAS;IAAAC,QAAA,eAE9Bf,OAAA,CAACJ,IAAI;MAACQ,IAAI,EAAEA,IAAK;MAACY,YAAY,EAAE,IAAK;MAACC,YAAY,EAAE;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEV,CAAC;;AAED;AAAAV,EAAA,CArBMD,QAAQ;EAAA,QAEOP,SAAS;AAAA;AAAAwB,EAAA,GAFxBjB,QAAQ;AAsBd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}