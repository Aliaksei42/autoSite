{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../Button/Button';\nimport Post from '../Post/Post';\nimport TopPost from '../TopPost/TopPost';\nimport SidebarPosts from '../SidebarPosts/SidebarPosts';\nimport topPosts from '../../data/topPosts';\nimport posts from '../../data/posts';\nimport sidebarPosts from '../../data/sidebarPosts';\nimport styles from './Posts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [visiblePosts, setVisiblePosts] = useState(4);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // Запрос к серверу для получения списка постов\n    axios.get('http://localhost:5000/posts').then(response => {\n      setPosts(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []); // Пустой массив зависимостей означает, что эффект выполняется только один раз при монтировании компонента\n\n  // Обработчик для отображения большего количества постов\n  const handleShowMore = () => {\n    setVisiblePosts(prevVisiblePosts => prevVisiblePosts + 4); // Увеличиваем количество отображаемых постов на 2\n  };\n\n  return (\n    /*#__PURE__*/\n    // Общий контейнер для постов\n    _jsxDEV(\"div\", {\n      className: styles.postsContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postsRow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postsLeft,\n          children: [/*#__PURE__*/_jsxDEV(TopPost, {\n            topPost: topPosts[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.posts,\n            children: posts.slice(0, visiblePosts).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.posts,\n              children: /*#__PURE__*/_jsxDEV(Post, {\n                post: post\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)\n            }, post.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.postsRight,\n          children: /*#__PURE__*/_jsxDEV(SidebarPosts, {\n            sidebarPosts: sidebarPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), visiblePosts < posts.length && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleShowMore,\n        children: \"Show more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Posts, \"Z2R4dFLxlsLFiN5L2XcDXo9eO3w=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","Button","Post","TopPost","SidebarPosts","topPosts","posts","sidebarPosts","styles","jsxDEV","_jsxDEV","Posts","_s","visiblePosts","setVisiblePosts","setPosts","useEffect","axios","get","then","response","data","catch","error","console","handleShowMore","prevVisiblePosts","className","postsContainer","children","postsRow","postsLeft","topPost","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","post","id","postsRight","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport Button from '../Button/Button'\r\nimport Post from '../Post/Post'\r\nimport TopPost from '../TopPost/TopPost'\r\nimport SidebarPosts from '../SidebarPosts/SidebarPosts'\r\n\r\n\r\nimport topPosts from '../../data/topPosts'\r\nimport posts from '../../data/posts'\r\nimport sidebarPosts from '../../data/sidebarPosts'\r\n\r\nimport styles from './Posts.module.css'\r\n\r\nconst Posts = () => {\r\n  const [visiblePosts, setVisiblePosts] = useState(4);\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n      // Запрос к серверу для получения списка постов\r\n      axios.get('http://localhost:5000/posts')\r\n          .then((response) => {\r\n              setPosts(response.data);\r\n          })\r\n          .catch((error) => {\r\n              console.error(error);\r\n          });\r\n  }, []); // Пустой массив зависимостей означает, что эффект выполняется только один раз при монтировании компонента\r\n\r\n  // Обработчик для отображения большего количества постов\r\n  const handleShowMore = () => {\r\n    setVisiblePosts((prevVisiblePosts) => prevVisiblePosts + 4) // Увеличиваем количество отображаемых постов на 2\r\n  }\r\n\r\n  return (\r\n    // Общий контейнер для постов\r\n    <div className={styles.postsContainer}>\r\n      <div className={styles.postsRow}>\r\n        <div className={styles.postsLeft}>\r\n          {/* Рендерим TopPost перед маппингом постов */}\r\n          <TopPost topPost={topPosts[0]} />\r\n\r\n          <div className={styles.posts}>\r\n            {/* Маппим массив постов для их отображения */}\r\n            {posts.slice(0, visiblePosts).map((post) => (\r\n              <div key={post.id} className={styles.posts}>\r\n                {/* Передаем компоненту Post информацию о посте */}\r\n                <Post post={post} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={styles.postsRight}>\r\n          {/* Вместо передачи всех постов передаем только отфильтрованные */}\r\n          <SidebarPosts sidebarPosts={sidebarPosts} />\r\n        </div>\r\n      </div>\r\n      {/* Показываем кнопку \"Показать ещё\", если есть ещё посты для отображения */}\r\n      {visiblePosts < posts.length && (\r\n        <Button onClick={handleShowMore}>Show more</Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}