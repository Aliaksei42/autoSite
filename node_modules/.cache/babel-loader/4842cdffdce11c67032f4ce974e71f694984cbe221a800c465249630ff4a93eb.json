{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Post\\\\Post.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotFound from '../NotFound/NotFound';\nimport styles from './Post.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post,\n  isSinglePost\n}) => {\n  // Если пост не передан, отображаем ссылку на страницу NotFound\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '700px',\n        height: '400px'\n      },\n      children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 56\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Деструктуризация свойств поста\n  const {\n    id,\n    title,\n    img,\n    text\n  } = post;\n\n  // Определяем, нужно ли отобразить полный текст поста или его сокращенную версию\n  const displayedText = isSinglePost ? text : text.slice(0, 100) + '...';\n\n  // Используем литералы шаблонов для создания уникального URL поста\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postContainer,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/posts/${post.id}-${post.title.replace(/\\s+/g, '-')}`,\n      className: styles.postLink,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.postImage,\n        src: img,\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: styles.postTitle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postContentFull,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.postText,\n          children: displayedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","Link","NotFound","styles","jsxDEV","_jsxDEV","Post","post","isSinglePost","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","id","title","img","text","displayedText","slice","className","postContainer","to","replace","postLink","postImage","src","alt","postTitle","postContentFull","postText","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Post/Post.jsx"],"sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NotFound from '../NotFound/NotFound'\r\nimport styles from './Post.module.css'\r\n\r\nconst Post = ({ post, isSinglePost }) => {\r\n  // Если пост не передан, отображаем ссылку на страницу NotFound\r\n  if (!post) {\r\n    return (\r\n      <div style={{ width: '700px', height: '400px' }}><NotFound /></div>\r\n  )\r\n  }\r\n\r\n  // Деструктуризация свойств поста\r\n  const { id, title, img, text } = post\r\n\r\n  // Определяем, нужно ли отобразить полный текст поста или его сокращенную версию\r\n  const displayedText = isSinglePost ? text : text.slice(0, 100) + '...'\r\n\r\n  // Используем литералы шаблонов для создания уникального URL поста\r\n  return (\r\n    <div className={styles.postContainer}>\r\n      {/* Ссылка на страницу с подробной информацией о посте */}\r\n      <Link to={`/posts/${post.id}-${post.title.replace(/\\s+/g, '-')}`} className={styles.postLink}>\r\n        <img className={styles.postImage} src={img} alt={title} />\r\n        <h3 className={styles.postTitle}>{title}</h3>\r\n        <div className={styles.postContentFull}>\r\n          <p className={styles.postText}>{displayedText}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAa,CAAC,KAAK;EACvC;EACA,IAAI,CAACD,IAAI,EAAE;IACT,oBACEF,OAAA;MAAKI,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAC,QAAA,eAACP,OAAA,CAACH,QAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAEvE;;EAEA;EACA,MAAM;IAAEC,EAAE;IAAEC,KAAK;IAAEC,GAAG;IAAEC;EAAK,CAAC,GAAGb,IAAI;;EAErC;EACA,MAAMc,aAAa,GAAGb,YAAY,GAAGY,IAAI,GAAGA,IAAI,CAACE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK;;EAEtE;EACA,oBACEjB,OAAA;IAAKkB,SAAS,EAAEpB,MAAM,CAACqB,aAAc;IAAAZ,QAAA,eAEnCP,OAAA,CAACJ,IAAI;MAACwB,EAAE,EAAG,UAASlB,IAAI,CAACU,EAAG,IAAGV,IAAI,CAACW,KAAK,CAACQ,OAAO,CAAC,MAAM,EAAE,GAAG,CAAE,EAAE;MAACH,SAAS,EAAEpB,MAAM,CAACwB,QAAS;MAAAf,QAAA,gBAC3FP,OAAA;QAAKkB,SAAS,EAAEpB,MAAM,CAACyB,SAAU;QAACC,GAAG,EAAEV,GAAI;QAACW,GAAG,EAAEZ;MAAM;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1DX,OAAA;QAAIkB,SAAS,EAAEpB,MAAM,CAAC4B,SAAU;QAAAnB,QAAA,EAAEM;MAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7CX,OAAA;QAAKkB,SAAS,EAAEpB,MAAM,CAAC6B,eAAgB;QAAApB,QAAA,eACrCP,OAAA;UAAGkB,SAAS,EAAEpB,MAAM,CAAC8B,QAAS;UAAArB,QAAA,EAAES;QAAa;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAAkB,EAAA,GA3BK5B,IAAI;AA6BV,eAAeA,IAAI;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}