{"ast":null,"code":"import React,{useState}from'react';import Button from'../Button/Button';import Post from'../Post/Post';import TopPost from'../TopPost/TopPost';import SidebarPosts from'../SidebarPosts/SidebarPosts';import topPosts from'../../data/topPosts';import posts from'../../data/posts';import sidebarPosts from'../../data/sidebarPosts';import styles from'./Posts.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Posts=()=>{// Используем состояние для отслеживания количества видимых постов\nconst[visiblePosts,setVisiblePosts]=useState(4);// Начинаем с отображения 4 постов\n// Обработчик для отображения большего количества постов\nconst handleShowMore=()=>{setVisiblePosts(prevVisiblePosts=>prevVisiblePosts+4);// Увеличиваем количество отображаемых постов на 2\n};return/*#__PURE__*/ (// Общий контейнер для постов\n_jsxs(\"div\",{className:styles.postsContainer,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.postsRow,children:[/*#__PURE__*/_jsxs(\"div\",{className:styles.postsLeft,children:[/*#__PURE__*/_jsx(TopPost,{topPost:topPosts[0]}),/*#__PURE__*/_jsx(\"div\",{className:styles.posts,children:posts.slice(0,visiblePosts).map(post=>/*#__PURE__*/_jsx(\"div\",{className:styles.posts,children:/*#__PURE__*/_jsx(Post,{post:post})},post.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:styles.postsRight,children:/*#__PURE__*/_jsx(SidebarPosts,{sidebarPosts:sidebarPosts})})]}),visiblePosts<posts.length&&/*#__PURE__*/_jsx(Button,{onClick:handleShowMore,children:\"Show more\"})]}));};export default Posts;","map":{"version":3,"names":["React","useState","Button","Post","TopPost","SidebarPosts","topPosts","posts","sidebarPosts","styles","jsx","_jsx","jsxs","_jsxs","Posts","visiblePosts","setVisiblePosts","handleShowMore","prevVisiblePosts","className","postsContainer","children","postsRow","postsLeft","topPost","slice","map","post","id","postsRight","length","onClick"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport Button from '../Button/Button'\r\nimport Post from '../Post/Post'\r\nimport TopPost from '../TopPost/TopPost'\r\nimport SidebarPosts from '../SidebarPosts/SidebarPosts'\r\n\r\n\r\nimport topPosts from '../../data/topPosts'\r\nimport posts from '../../data/posts'\r\nimport sidebarPosts from '../../data/sidebarPosts'\r\n\r\nimport styles from './Posts.module.css'\r\n\r\nconst Posts = () => {\r\n  // Используем состояние для отслеживания количества видимых постов\r\n  const [visiblePosts, setVisiblePosts] = useState(4) // Начинаем с отображения 4 постов\r\n  \r\n\r\n  // Обработчик для отображения большего количества постов\r\n  const handleShowMore = () => {\r\n    setVisiblePosts((prevVisiblePosts) => prevVisiblePosts + 4) // Увеличиваем количество отображаемых постов на 2\r\n  }\r\n\r\n  return (\r\n    // Общий контейнер для постов\r\n    <div className={styles.postsContainer}>\r\n      <div className={styles.postsRow}>\r\n        <div className={styles.postsLeft}>\r\n          {/* Рендерим TopPost перед маппингом постов */}\r\n          <TopPost topPost={topPosts[0]} />\r\n\r\n          <div className={styles.posts}>\r\n            {/* Маппим массив постов для их отображения */}\r\n            {posts.slice(0, visiblePosts).map((post) => (\r\n              <div key={post.id} className={styles.posts}>\r\n                {/* Передаем компоненту Post информацию о посте */}\r\n                <Post post={post} />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={styles.postsRight}>\r\n          {/* Вместо передачи всех постов передаем только отфильтрованные */}\r\n          <SidebarPosts sidebarPosts={sidebarPosts} />\r\n        </div>\r\n      </div>\r\n      {/* Показываем кнопку \"Показать ещё\", если есть ещё посты для отображения */}\r\n      {visiblePosts < posts.length && (\r\n        <Button onClick={handleShowMore}>Show more</Button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CACrC,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,OAAO,KAAM,oBAAoB,CACxC,MAAO,CAAAC,YAAY,KAAM,8BAA8B,CAGvD,MAAO,CAAAC,QAAQ,KAAM,qBAAqB,CAC1C,MAAO,CAAAC,KAAK,KAAM,kBAAkB,CACpC,MAAO,CAAAC,YAAY,KAAM,yBAAyB,CAElD,MAAO,CAAAC,MAAM,KAAM,oBAAoB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvC,KAAM,CAAAC,KAAK,CAAGA,CAAA,GAAM,CAClB;AACA,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;AAGpD;AACA,KAAM,CAAAgB,cAAc,CAAGA,CAAA,GAAM,CAC3BD,eAAe,CAAEE,gBAAgB,EAAKA,gBAAgB,CAAG,CAAC,CAAC,CAAC;AAC9D,CAAC,CAED,oBACE;AACAL,KAAA,QAAKM,SAAS,CAAEV,MAAM,CAACW,cAAe,CAAAC,QAAA,eACpCR,KAAA,QAAKM,SAAS,CAAEV,MAAM,CAACa,QAAS,CAAAD,QAAA,eAC9BR,KAAA,QAAKM,SAAS,CAAEV,MAAM,CAACc,SAAU,CAAAF,QAAA,eAE/BV,IAAA,CAACP,OAAO,EAACoB,OAAO,CAAElB,QAAQ,CAAC,CAAC,CAAE,CAAE,CAAC,cAEjCK,IAAA,QAAKQ,SAAS,CAAEV,MAAM,CAACF,KAAM,CAAAc,QAAA,CAE1Bd,KAAK,CAACkB,KAAK,CAAC,CAAC,CAAEV,YAAY,CAAC,CAACW,GAAG,CAAEC,IAAI,eACrChB,IAAA,QAAmBQ,SAAS,CAAEV,MAAM,CAACF,KAAM,CAAAc,QAAA,cAEzCV,IAAA,CAACR,IAAI,EAACwB,IAAI,CAAEA,IAAK,CAAE,CAAC,EAFZA,IAAI,CAACC,EAGV,CACN,CAAC,CACC,CAAC,EACH,CAAC,cACNjB,IAAA,QAAKQ,SAAS,CAAEV,MAAM,CAACoB,UAAW,CAAAR,QAAA,cAEhCV,IAAA,CAACN,YAAY,EAACG,YAAY,CAAEA,YAAa,CAAE,CAAC,CACzC,CAAC,EACH,CAAC,CAELO,YAAY,CAAGR,KAAK,CAACuB,MAAM,eAC1BnB,IAAA,CAACT,MAAM,EAAC6B,OAAO,CAAEd,cAAe,CAAAI,QAAA,CAAC,WAAS,CAAQ,CACnD,EACE,CAAC,EAEV,CAAC,CAED,cAAe,CAAAP,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}