{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Input\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport styles from './Input.module.css';\nimport posts from '../../data/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  onSearch,\n  posts\n}) => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [searchValue, setSearhValue] = useState('');\n  const handleInputChange = e => {\n    setSearchText(e.target.value);\n  };\n  const handleSearch = () => {\n    console.log('Запущен поиск');\n    onSearch(searchText);\n    setSearchText('');\n    console.log(searchText);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      console.log('Сработал Enter на Input');\n      handleSearch();\n    }\n  };\n\n  // Функция для фильтрации постов и вывода в консоль\n  const filterAndLogPosts = () => {\n    const filteredPosts = posts.filter(post => post.title.includes(searchText));\n    console.log('Отфильтрованные посты:', filterAndLogPosts);\n    console.log('Отфильтрованные посты:', filteredPosts);\n    console.log('Отфильтрованные посты:', filteredPosts);\n  };\n  const onChangeSearchInnput = event => {\n    console.log(event.target.value);\n    setSearhValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inputWithButton,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Wpisz tekst do wyszukania\",\n      value: searchText,\n      onChange: onChangeSearchInnput,\n      onKeyPress: handleKeyPress // Добавляем обработчик нажатия клавиши\n      ,\n      className: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/search`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          handleSearch();\n          filterAndLogPosts();\n        },\n        className: styles.inputButton,\n        children: \"Szukaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"yLnYEKvTz8MBLpOfsNJ3u6Xz3Qo=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Link","useState","styles","posts","jsxDEV","_jsxDEV","Input","onSearch","_s","searchText","setSearchText","searchValue","setSearhValue","handleInputChange","e","target","value","handleSearch","console","log","handleKeyPress","key","filterAndLogPosts","filteredPosts","filter","post","title","includes","onChangeSearchInnput","event","className","inputWithButton","children","type","placeholder","onChange","onKeyPress","input","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","inputButton","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Input/Input.jsx"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport styles from './Input.module.css'\r\nimport posts from '../../data/posts'\r\n\r\nconst Input = ({ onSearch, posts }) => {\r\n  const [searchText, setSearchText] = useState('');\r\nconst [searchValue, setSearhValue] = useState('')\r\n  const handleInputChange = (e) => {\r\n    setSearchText(e.target.value)\r\n  }\r\n\r\n  const handleSearch = () => {\r\n    console.log('Запущен поиск');\r\n    \r\n    onSearch(searchText);\r\n    setSearchText('');\r\n    console.log(searchText);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      console.log('Сработал Enter на Input')\r\n      handleSearch()\r\n    }\r\n  }\r\n\r\n  // Функция для фильтрации постов и вывода в консоль\r\n  const filterAndLogPosts = () => {\r\n    const filteredPosts = posts.filter(post => post.title.includes(searchText));\r\n    console.log('Отфильтрованные посты:', filterAndLogPosts);\r\n    console.log('Отфильтрованные посты:', filteredPosts);\r\n    console.log('Отфильтрованные посты:', filteredPosts);\r\n  }\r\n  \r\nconst onChangeSearchInnput = (event) => {\r\n  console.log(event.target.value);\r\n  setSearhValue(event.target.value);\r\n}\r\n  \r\n  return (\r\n    <div className={styles.inputWithButton}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Wpisz tekst do wyszukania\"\r\n        value={searchText}\r\n        onChange={onChangeSearchInnput}\r\n        onKeyPress={handleKeyPress} // Добавляем обработчик нажатия клавиши\r\n        className={styles.input}\r\n      />\r\n      <Link to={`/search`}>\r\n      <button onClick={() => { handleSearch(); filterAndLogPosts(); }} className={styles.inputButton}>\r\n          Szukaj\r\n        </button>\r\n        \r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}