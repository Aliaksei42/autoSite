{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\pages\\\\PostPage.jsx\",\n  _s = $RefreshSig$();\n// PostPage.js\n// Импортируем React и необходимые компоненты\nimport { useParams } from 'react-router-dom';\nimport Post from '../components/Post/Post'; // Предполагается, что у вас есть компонент Post\nimport NotFound from '../components/NotFound/NotFound'; // Предполагается, что у вас есть компонент NotFound\nimport styles from './PostPage.module.css'; // Импортируем стили для компонента PostPage\n\n// Компонент PostPage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostPage = () => {\n  _s();\n  // Используем хук useParams для получения параметра из URL\n  const {\n    postId\n  } = useParams();\n\n  // Найдем пост с помощью идентификатора postId\n  const post = posts.find(p => p.id === parseInt(postId, 10));\n\n  // Если пост не найден, отобразим страницу NotFound\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.postPage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.img,\n        alt: post.title,\n        className: styles.postPageImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postPageTitle,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postPageText,\n        children: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n// Экспортируем компонент PostPage\n_s(PostPage, \"zY00sTkH8LAD3YdIJE1pP6vQWzg=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["useParams","Post","NotFound","styles","jsxDEV","_jsxDEV","PostPage","_s","postId","post","posts","find","p","id","parseInt","fileName","_jsxFileName","lineNumber","columnNumber","className","postPage","children","postContainer","src","img","alt","title","postPageImage","postPageTitle","postPageText","text","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/pages/PostPage.jsx"],"sourcesContent":["// PostPage.js\r\n// Импортируем React и необходимые компоненты\r\nimport { useParams } from 'react-router-dom'\r\nimport Post from '../components/Post/Post' // Предполагается, что у вас есть компонент Post\r\nimport NotFound from '../components/NotFound/NotFound' // Предполагается, что у вас есть компонент NotFound\r\nimport styles from './PostPage.module.css' // Импортируем стили для компонента PostPage\r\n\r\n// Компонент PostPage\r\nconst PostPage = () => {\r\n  // Используем хук useParams для получения параметра из URL\r\n  const { postId } = useParams()\r\n\r\n  // Найдем пост с помощью идентификатора postId\r\n  const post = posts.find((p) => p.id === parseInt(postId, 10))\r\n\r\n\r\n  \r\n  // Если пост не найден, отобразим страницу NotFound\r\n  if (!post) {\r\n    return <NotFound />\r\n  }\r\n\r\n  return (\r\n    <div className={styles.postPage}>\r\n      <div className={styles.postContainer}>\r\n        <img src={post.img} alt={post.title} className={styles.postPageImage} />\r\n        <div className={styles.postPageTitle}>\r\n          <h3>{post.title}</h3>\r\n        </div>\r\n        <div className={styles.postPageText}>{post.text}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Экспортируем компонент PostPage\r\nexport default PostPage\r\n"],"mappings":";;AAAA;AACA;AACA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,yBAAyB,EAAC;AAC3C,OAAOC,QAAQ,MAAM,iCAAiC,EAAC;AACvD,OAAOC,MAAM,MAAM,uBAAuB,EAAC;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;;EAE9B;EACA,MAAMS,IAAI,GAAGC,KAAK,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKC,QAAQ,CAACN,MAAM,EAAE,EAAE,CAAC,CAAC;;EAI7D;EACA,IAAI,CAACC,IAAI,EAAE;IACT,oBAAOJ,OAAA,CAACH,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrB;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAEhB,MAAM,CAACiB,QAAS;IAAAC,QAAA,eAC9BhB,OAAA;MAAKc,SAAS,EAAEhB,MAAM,CAACmB,aAAc;MAAAD,QAAA,gBACnChB,OAAA;QAAKkB,GAAG,EAAEd,IAAI,CAACe,GAAI;QAACC,GAAG,EAAEhB,IAAI,CAACiB,KAAM;QAACP,SAAS,EAAEhB,MAAM,CAACwB;MAAc;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxEb,OAAA;QAAKc,SAAS,EAAEhB,MAAM,CAACyB,aAAc;QAAAP,QAAA,eACnChB,OAAA;UAAAgB,QAAA,EAAKZ,IAAI,CAACiB;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACNb,OAAA;QAAKc,SAAS,EAAEhB,MAAM,CAAC0B,YAAa;QAAAR,QAAA,EAAEZ,IAAI,CAACqB;MAAI;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAX,EAAA,CA3BMD,QAAQ;EAAA,QAEON,SAAS;AAAA;AAAA+B,EAAA,GAFxBzB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}