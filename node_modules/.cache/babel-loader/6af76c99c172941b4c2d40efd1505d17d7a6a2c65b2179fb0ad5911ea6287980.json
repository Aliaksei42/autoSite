{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\Project16.11\\\\auto-site\\\\src\\\\components\\\\Input\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport { Link } from 'react-router-dom';\nimport { useState } from 'react';\nimport styles from './Input.module.css';\nimport posts from '../../data/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = ({\n  onSearch,\n  posts\n}) => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [searchValue, setSearhValue] = useState('');\n  const handleInputChange = e => {\n    setSearchText(e.target.value);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      console.log('Сработал Enter на Input');\n      handleSearch();\n    }\n  };\n  const onChangeSearchInnput = event => {\n    console.log(event.target.value);\n    setSearhValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.inputWithButton,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Wpisz tekst do wyszukania\",\n      value: searchText,\n      onChange: onChangeSearchInnput,\n      onKeyPress: handleKeyPress // Добавляем обработчик нажатия клавиши\n      ,\n      className: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/search`,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {},\n        className: styles.inputButton,\n        children: \"Szukaj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"yLnYEKvTz8MBLpOfsNJ3u6Xz3Qo=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["Link","useState","styles","posts","jsxDEV","_jsxDEV","Input","onSearch","_s","searchText","setSearchText","searchValue","setSearhValue","handleInputChange","e","target","value","handleKeyPress","key","console","log","handleSearch","onChangeSearchInnput","event","className","inputWithButton","children","type","placeholder","onChange","onKeyPress","input","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","inputButton","_c","$RefreshReg$"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Input/Input.jsx"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { useState } from 'react'\r\nimport styles from './Input.module.css'\r\nimport posts from '../../data/posts'\r\n\r\nconst Input = ({ onSearch, posts }) => {\r\n  const [searchText, setSearchText] = useState('');\r\nconst [searchValue, setSearhValue] = useState('')\r\n  const handleInputChange = (e) => {\r\n    setSearchText(e.target.value)\r\n  }\r\n\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      console.log('Сработал Enter на Input')\r\n      handleSearch()\r\n    }\r\n  }\r\n\r\n \r\n  \r\nconst onChangeSearchInnput = (event) => {\r\n  console.log(event.target.value);\r\n  setSearhValue(event.target.value);\r\n}\r\n  \r\n  return (\r\n    <div className={styles.inputWithButton}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Wpisz tekst do wyszukania\"\r\n        value={searchText}\r\n        onChange={onChangeSearchInnput}\r\n        onKeyPress={handleKeyPress} // Добавляем обработчик нажатия клавиши\r\n        className={styles.input}\r\n      />\r\n      <Link to={`/search`}>\r\n      <button onClick={() => {  }} className={styles.inputButton}>\r\n          Szukaj\r\n        </button>\r\n        \r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,KAAK,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,QAAQ;EAAEJ;AAAM,CAAC,KAAK;EAAAK,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,WAAW,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC/BJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAGD,MAAMC,cAAc,GAAIH,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,EAAE;MACrBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCC,YAAY,CAAC,CAAC;IAChB;EACF,CAAC;EAIH,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;IACtCJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAACR,MAAM,CAACC,KAAK,CAAC;IAC/BJ,aAAa,CAACW,KAAK,CAACR,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAEC,oBACEX,OAAA;IAAKmB,SAAS,EAAEtB,MAAM,CAACuB,eAAgB;IAAAC,QAAA,gBACrCrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,2BAA2B;MACvCZ,KAAK,EAAEP,UAAW;MAClBoB,QAAQ,EAAEP,oBAAqB;MAC/BQ,UAAU,EAAEb,cAAe,CAAC;MAAA;MAC5BO,SAAS,EAAEtB,MAAM,CAAC6B;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACF9B,OAAA,CAACL,IAAI;MAACoC,EAAE,EAAG,SAAS;MAAAV,QAAA,eACpBrB,OAAA;QAAQgC,OAAO,EAAEA,CAAA,KAAM,CAAG,CAAE;QAACb,SAAS,EAAEtB,MAAM,CAACoC,WAAY;QAAAZ,QAAA,EAAC;MAE1D;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAA3B,EAAA,CAxCKF,KAAK;AAAAiC,EAAA,GAALjC,KAAK;AA0CX,eAAeA,KAAK;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}