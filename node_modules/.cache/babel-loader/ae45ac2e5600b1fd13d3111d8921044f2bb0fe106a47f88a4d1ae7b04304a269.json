{"ast":null,"code":"import Input from \"./Input\";\n\n// Функция для фильтрации постов по заголовку, дате и тексту\nconst searchPosts = (searchText, setFilteredPosts, posts) => {\n  con;\n  // Приводим текст поиска к нижнему регистру для регистронезависимого поиска\n  const searchTextLower = searchText.toLowerCase().trim();\n\n  // Фильтруем посты по заголовку, дате и тексту\n  const filteredPosts = posts.filter(post => {\n    // Приводим данные поста к нижнему регистру для регистронезависимого сравнения\n    const titleLower = post.title.toLowerCase();\n    const dateLower = post.date.toLowerCase();\n    const textLower = post.text.toLowerCase();\n\n    // Проверяем, содержит ли пост хотя бы одно из полей значение searchText\n    return titleLower.includes(searchTextLower) || dateLower.includes(searchTextLower) || textLower.includes(searchTextLower);\n  });\n\n  // Обновляем отфильтрованные посты через переданную функцию setFilteredPosts\n  setFilteredPosts(filteredPosts);\n};\nexport default searchPosts;","map":{"version":3,"names":["Input","searchPosts","searchText","setFilteredPosts","posts","con","searchTextLower","toLowerCase","trim","filteredPosts","filter","post","titleLower","title","dateLower","date","textLower","text","includes"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/components/Input/search.js"],"sourcesContent":["import Input from \"./Input\";\r\n\r\n// Функция для фильтрации постов по заголовку, дате и тексту\r\nconst searchPosts = (searchText, setFilteredPosts, posts) => {\r\n    con\r\n    // Приводим текст поиска к нижнему регистру для регистронезависимого поиска\r\n    const searchTextLower = searchText.toLowerCase().trim();\r\n  \r\n    // Фильтруем посты по заголовку, дате и тексту\r\n    const filteredPosts = posts.filter((post) => {\r\n      // Приводим данные поста к нижнему регистру для регистронезависимого сравнения\r\n      const titleLower = post.title.toLowerCase();\r\n      const dateLower = post.date.toLowerCase();\r\n      const textLower = post.text.toLowerCase();\r\n  \r\n      // Проверяем, содержит ли пост хотя бы одно из полей значение searchText\r\n      return (\r\n        titleLower.includes(searchTextLower) ||\r\n        dateLower.includes(searchTextLower) ||\r\n        textLower.includes(searchTextLower)\r\n      );\r\n    });\r\n  \r\n    // Обновляем отфильтрованные посты через переданную функцию setFilteredPosts\r\n    setFilteredPosts(filteredPosts);\r\n  };\r\n  \r\n  export default searchPosts;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,SAAS;;AAE3B;AACA,MAAMC,WAAW,GAAGA,CAACC,UAAU,EAAEC,gBAAgB,EAAEC,KAAK,KAAK;EACzDC,GAAG;EACH;EACA,MAAMC,eAAe,GAAGJ,UAAU,CAACK,WAAW,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;;EAEvD;EACA,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAK;IAC3C;IACA,MAAMC,UAAU,GAAGD,IAAI,CAACE,KAAK,CAACN,WAAW,CAAC,CAAC;IAC3C,MAAMO,SAAS,GAAGH,IAAI,CAACI,IAAI,CAACR,WAAW,CAAC,CAAC;IACzC,MAAMS,SAAS,GAAGL,IAAI,CAACM,IAAI,CAACV,WAAW,CAAC,CAAC;;IAEzC;IACA,OACEK,UAAU,CAACM,QAAQ,CAACZ,eAAe,CAAC,IACpCQ,SAAS,CAACI,QAAQ,CAACZ,eAAe,CAAC,IACnCU,SAAS,CAACE,QAAQ,CAACZ,eAAe,CAAC;EAEvC,CAAC,CAAC;;EAEF;EACAH,gBAAgB,CAACM,aAAa,CAAC;AACjC,CAAC;AAED,eAAeR,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}