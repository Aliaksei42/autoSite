{"ast":null,"code":"// PostPage.js\n// Импортируем React и необходимые компоненты\nimport{useParams}from'react-router-dom';import posts from'../data/posts';// Предполагается, что у вас есть файл с данными постов\nimport Post from'../components/Post/Post';// Предполагается, что у вас есть компонент Post\nimport NotFound from'../components/NotFound/NotFound';// Предполагается, что у вас есть компонент NotFound\nimport styles from'./PostPage.module.css';// Импортируем стили для компонента PostPage\n// Компонент PostPage\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const PostPage=()=>{// Используем хук useParams для получения параметра из URL\nconst{postId}=useParams();// Найдем пост с помощью идентификатора postId\nconst post=posts.find(p=>p.id===parseInt(postId,10));// Если пост не найден, отобразим страницу NotFound\nif(!post){return/*#__PURE__*/_jsx(NotFound,{});}return/*#__PURE__*/_jsx(\"div\",{className:styles.postPage,children:/*#__PURE__*/_jsxs(\"div\",{className:styles.postContainer,children:[/*#__PURE__*/_jsx(\"img\",{src:post.img,alt:post.title,className:styles.postPageImage}),/*#__PURE__*/_jsx(\"div\",{className:styles.postPageTitle,children:/*#__PURE__*/_jsx(\"h3\",{children:post.title})}),/*#__PURE__*/_jsx(\"div\",{className:styles.postPageText,children:post.text})]})});};// Экспортируем компонент PostPage\nexport default PostPage;","map":{"version":3,"names":["useParams","posts","Post","NotFound","styles","jsx","_jsx","jsxs","_jsxs","PostPage","postId","post","find","p","id","parseInt","className","postPage","children","postContainer","src","img","alt","title","postPageImage","postPageTitle","postPageText","text"],"sources":["C:/Users/Alex/Desktop/Project16.11/auto-site/src/pages/PostPage.jsx"],"sourcesContent":["// PostPage.js\r\n// Импортируем React и необходимые компоненты\r\nimport { useParams } from 'react-router-dom'\r\nimport posts from '../data/posts' // Предполагается, что у вас есть файл с данными постов\r\nimport Post from '../components/Post/Post' // Предполагается, что у вас есть компонент Post\r\nimport NotFound from '../components/NotFound/NotFound' // Предполагается, что у вас есть компонент NotFound\r\nimport styles from './PostPage.module.css' // Импортируем стили для компонента PostPage\r\n\r\n// Компонент PostPage\r\nconst PostPage = () => {\r\n  // Используем хук useParams для получения параметра из URL\r\n  const { postId } = useParams()\r\n\r\n  // Найдем пост с помощью идентификатора postId\r\n  const post = posts.find((p) => p.id === parseInt(postId, 10))\r\n\r\n\r\n  \r\n  // Если пост не найден, отобразим страницу NotFound\r\n  if (!post) {\r\n    return <NotFound />\r\n  }\r\n\r\n  \r\n  \r\n  return (\r\n    <div className={styles.postPage}>\r\n      <div className={styles.postContainer}>\r\n        <img src={post.img} alt={post.title} className={styles.postPageImage} />\r\n        <div className={styles.postPageTitle}>\r\n          <h3>{post.title}</h3>\r\n        </div>\r\n        <div className={styles.postPageText}>{post.text}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Экспортируем компонент PostPage\r\nexport default PostPage\r\n"],"mappings":"AAAA;AACA;AACA,OAASA,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,KAAK,KAAM,eAAe,CAAC;AAClC,MAAO,CAAAC,IAAI,KAAM,yBAAyB,CAAC;AAC3C,MAAO,CAAAC,QAAQ,KAAM,iCAAiC,CAAC;AACvD,MAAO,CAAAC,MAAM,KAAM,uBAAuB,CAAC;AAE3C;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB;AACA,KAAM,CAAEC,MAAO,CAAC,CAAGV,SAAS,CAAC,CAAC,CAE9B;AACA,KAAM,CAAAW,IAAI,CAAGV,KAAK,CAACW,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACC,EAAE,GAAKC,QAAQ,CAACL,MAAM,CAAE,EAAE,CAAC,CAAC,CAI7D;AACA,GAAI,CAACC,IAAI,CAAE,CACT,mBAAOL,IAAA,CAACH,QAAQ,GAAE,CAAC,CACrB,CAIA,mBACEG,IAAA,QAAKU,SAAS,CAAEZ,MAAM,CAACa,QAAS,CAAAC,QAAA,cAC9BV,KAAA,QAAKQ,SAAS,CAAEZ,MAAM,CAACe,aAAc,CAAAD,QAAA,eACnCZ,IAAA,QAAKc,GAAG,CAAET,IAAI,CAACU,GAAI,CAACC,GAAG,CAAEX,IAAI,CAACY,KAAM,CAACP,SAAS,CAAEZ,MAAM,CAACoB,aAAc,CAAE,CAAC,cACxElB,IAAA,QAAKU,SAAS,CAAEZ,MAAM,CAACqB,aAAc,CAAAP,QAAA,cACnCZ,IAAA,OAAAY,QAAA,CAAKP,IAAI,CAACY,KAAK,CAAK,CAAC,CAClB,CAAC,cACNjB,IAAA,QAAKU,SAAS,CAAEZ,MAAM,CAACsB,YAAa,CAAAR,QAAA,CAAEP,IAAI,CAACgB,IAAI,CAAM,CAAC,EACnD,CAAC,CACH,CAAC,CAEV,CAAC,CAED;AACA,cAAe,CAAAlB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}